<html lang="en"> <head>     <meta charset="utf-8">     <title>tÃ¤nzer: The lovable web server framework for Tcl!</title>     <link rel="stylesheet" type="text/css" href="style/main.css">     <link rel="stylesheet" type="text/css" href="examples/themes/ir.css">     <script src="examples/highlight.pack.js"></script>     <script language="javascript">         window.onload = function() {             hljs.configure({                 languages: ['tcl']             });              var nodes = document.getElementsByClassName("code");              for (var i in nodes) {                 var node = nodes[i];                  if (node.tagName != "DIV") {                     continue;                 }                  hljs.highlightBlock(node);             }         };     </script> </head> <body> <div id="header">     <div class="logo">         <img src="logo.png" alt="tÃ¤nzer">     </div>     <div class="caption">         A very serious, industrial web server framework for Tcl     </div>     <div id="tabs">         <div class="current">             <a href="/">home</a>         </div>         <div class="item">             <a href="/git/">source code</a>         </div>         <div class="item">             <a href="/doc/">documentation</a>         </div>         <div class="item">             <a href="/examples/">examples</a>         </div>         <div class="item">             <a href="license.html">license</a>         </div>     </div> </div> <h3>What is tÃ¤nzer?</h3> <p>     tÃ¤nzer is a minimalistic web server framework for Tcl which provides a very     straightforward environment for writing HTTP/1.1 web applications. </p> <h3>Features</h3> <ul>     <li>Asynchronous HTTP/1.1-compliant web server</li>     <li>Pattern-based request routing engine</li>     <li>SCGI client and server support</li>     <li>CGI executable support</li>     <li>Fast static file service</li>     <li>Works out-of-the-box on Tcl 8.6</li> </ul> <p>     Writing asynchronous web applications shouldn't have to be complicated.     Fortunately, tÃ¤nzer is there to take you on a dance journey through the     perils of keepalive requests, HTTP message parsing, and SCGI and CGI     support.  Writing "Hello, world!" with tÃ¤nzer is a snap!  And so is     everything else you want to do.  Write your app with tÃ¤nzer today. </p> <h3>From zero to web service in no time flat!</h3> <div id="main">     <div class="code">         ~$ git clone <a href="/git/tanzer.git">http://tanzer.io/git/tanzer.git</a>     </div>     <div class="code">         package require tanzer          set server [::tanzer::server new]          $server route GET /* {.*:8080} apply {             {event session args} {                 if {$event ne "write"} {                     return                 }                  set response [::tanzer::response new 200 {                     Content-Type "text/plain"                     X-Foo        "bar"                 }]                  $response buffer "Hello, world!"                  $session send $response                 $session nextRequest             }         }          $server listen 8080     </div>     <div class="caption">         <img src="tnzr.png" alt="tÃ¤nzer">         Don't let another framework stand in your way.     </div>     <div class="footer">         Copyright (c) 2014         <a href="http://xantronix.net/">Alexandra Hrefna HilmisdÃ³ttir</a>.         Released under the terms of the <a href="license.html">MIT license</a>.     </div> </div> </body> </html> 
